package ru.geekbrains.qa.java2.lesson8.project;

import ru.geekbrains.qa.java2.lesson8.project.entity.WeatherData;
import ru.geekbrains.qa.java2.lesson8.project.enums.Functionality;
import ru.geekbrains.qa.java2.lesson8.project.enums.Periods;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Controller {

    WeatherProvider weatherProvider = new WeatherProviderImpl();

    Map<Integer, Functionality> variantResult = new HashMap();

    public Controller() {
        variantResult.put(1, Functionality.GET_CURRENT_WEATHER);
        variantResult.put(2, Functionality.GET_WEATHER_IN_NEXT_5_DAYS);
        variantResult.put(3, Functionality.GET_WEATHER_FROM_DB);
    }

    public void onUserInput(String input) throws IOException {
        int command = Integer.parseInt(input);
        if (!variantResult.containsKey(command)) {
            throw new IOException("There is no command for command-key " + command);
        }

        switch (variantResult.get(command)) {
            case GET_CURRENT_WEATHER:
                getCurrentWeather();
                break;
            case GET_WEATHER_IN_NEXT_5_DAYS:
                getWeatherIn5Days();
                break;
            case GET_WEATHER_FROM_DB:
                getWeatherFromDataBase();
                break;

        }
    }

    public void getCurrentWeather() throws IOException {
        weatherProvider.getWeather(Periods.NOW);
    }

    public void getWeatherIn5Days() throws IOException {
        weatherProvider.getWeather(Periods.FIVE_DAYS);
    }


    public void getWeatherFromDataBase() {
        List<WeatherData> weatherDatas = new ArrayList<>();
        try {
            weatherProvider.getAllFromDb();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
